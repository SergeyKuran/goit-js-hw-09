{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SAEvC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAiBC,MAAU,GAEvDA,EAAM,G,CAgCbL,EAAQY,iBAAiB,UA5BzB,SAAkBC,GAChBA,EAAIC,iBAEJ,MAAMC,OAAEA,EAAMV,MAAEA,EAAKW,KAAEA,GAAShB,EAAQiB,SAElCC,EAAcC,SAASJ,EAAOK,OACpC,IAAIC,EAAaC,OAAOH,SAASd,EAAMe,QACvC,MAAMG,EAAYJ,SAASH,EAAKI,OAEhC,IAAK,IAAII,EAAI,EAAGA,EAAIN,EAAaM,GAAK,EAAG,CACvC,IAAIpB,EAAWkB,OAAOE,EAAI,GAE1BrB,EAAcC,EAAUiB,GACrBI,MAAK,KACJC,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqBxB,QAAiBiB,MAAe,IAGxDQ,OAAM,KACLH,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoB1B,QAAeiB,MAAe,IAIxDA,GAAcE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  const { amount, delay, step } = formRef.elements;\n\n  const amountInput = parseInt(amount.value);\n  let delayInput = Number(parseInt(delay.value));\n  const stepInput = parseInt(step.value);\n\n  for (let i = 0; i < amountInput; i += 1) {\n    let position = Number(i + 1);\n\n    createPromise(position, delayInput)\n      .then(() => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delayInput}ms`\n        );\n      })\n      .catch(() => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delayInput}ms`\n        );\n      });\n\n    delayInput += stepInput;\n  }\n}\n\nformRef.addEventListener('submit', onSubmit);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","amount","step","elements","amountInput","parseInt","value","delayInput","Number","stepInput","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.c5bc86ae.js.map"}